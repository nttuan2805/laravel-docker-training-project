version: '3'
services:

  #PHP API Service
  php-api:
    build:
      context: ./api-app
    container_name: php-api
    working_dir: /var/www
    volumes:
      - ./api-app:/var/www
      - ./api-app/docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - api-network

  #Nginx API Service
  nginx-api:
    build:
      context: ./api-app/docker/nginx
    container_name: nginx-api
    ports:
      - "8081:81"
    volumes:
      - ./api-app:/var/www
      - ./api-app/docker/nginx/conf.d/:/etc/nginx/conf.d/
    depends_on: 
      - php-api
      - db-api
    networks:
      - api-network

  #MySQL API Service
  db-api:
    build:
      context: ./api-app/docker/db
    container_name: db-api
    ports:
      - "3308:3306"
    environment:
      MYSQL_DATABASE: webike
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./api-app/docker/db/conf.d:/etc/mysql/conf.d
    networks:
      - api-network

  #PHP Frontend Service
  php-frontend:
    build:
      context: ./frontend-app
    container_name: php-frontend
    working_dir: /var/www
    volumes:
      - ./frontend-app:/var/www
      - ./frontend-app/docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - frontend-network

  #Nginx Frontend Service
  nginx-frontend:
    build:
      context: ./frontend-app/docker/nginx
    container_name: nginx-frontend
    ports:
      - "8082:82"
    volumes:
      - ./frontend-app:/var/www
      - ./frontend-app/docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - frontend-network

#Docker Networks
networks:
  api-network:
    driver: bridge
  frontend-network:
    driver: bridge